{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "name": "_rewardCoin",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": true,
          "name": "companyContract",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "CompanyRegistered",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "registerCompany",
      "outputs": [
        {
          "name": "result",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCompany",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "cAddress",
          "type": "address"
        },
        {
          "name": "registered",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"registerCompany\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCompany\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"cAddress\",\"type\":\"address\"},{\"name\":\"registered\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_rewardCoin\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":true,\"name\":\"companyContract\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"result\",\"type\":\"bool\"}],\"name\":\"CompanyRegistered\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/juan/BC_Challenge/agora/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/juan/BC_Challenge/agora/contracts/CompanyState.sol\":{\"keccak256\":\"0x71517108dd2012a9fc247982ca2db5f8457f31881019700066ea28f03783f783\",\"urls\":[\"bzzr://371ca14a6f2bca2f5b8c30a3a92975ac385726acce855f7c2f8979fcc4d85704\"]},\"/home/juan/BC_Challenge/agora/contracts/ERC20.sol\":{\"keccak256\":\"0x54c34d0014439ea3a1facb5664cfaa340cf2624e1ac5c177c92aca8a9f4047bd\",\"urls\":[\"bzzr://282e217af6027c8f1f7e0afa443767a638bb0e79216af45efd706e067805bde0\"]},\"/home/juan/BC_Challenge/agora/contracts/Factory.sol\":{\"keccak256\":\"0xf65e46cd7571c0a99f83f64d33fb2050712247160f4e6bc4c30767b27c05a71f\",\"urls\":[\"bzzr://34ea433d73a9533c10e50f4ad8abec5f4689c033d0342776e07fd87addd643f4\"]},\"/home/juan/BC_Challenge/agora/contracts/ICompanyState.sol\":{\"keccak256\":\"0xcff91e3fe2d6b2fba818cfa98dd2d1d98448e088affe78e2703d9f31fa7653b6\",\"urls\":[\"bzzr://325222a2840459a761ab771c15ef3d73e512eac4ddc0d4293e1658b6f3008224\"]},\"/home/juan/BC_Challenge/agora/contracts/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]},\"/home/juan/BC_Challenge/agora/contracts/RewardCoin.sol\":{\"keccak256\":\"0x670a6ecac02461d57c3b9cbc49db57f9637ef10293a9ac508c5138e7f2dd4e6d\",\"urls\":[\"bzzr://73cd2a99c6b155a9cefaf142e5d2f24579b2b1a0f844ee9b2e7a312e524bfb14\"]},\"/home/juan/BC_Challenge/agora/contracts/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806116b08339810180604052602081101561003057600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061161f806100916000396000f3fe608060405234801561001057600080fd5b50600436106100355760003560e01c80625441941461003a578063127810bc1461010d575b600080fd5b6100f36004803603602081101561005057600080fd5b810190808035906020019064010000000081111561006d57600080fd5b82018360208201111561007f57600080fd5b803590602001918460018302840111640100000000831117156100a157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506101ce565b604051808215151515815260200191505060405180910390f35b610115610453565b60405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828103825285818151815260200191508051906020019080838360005b83811015610191578082015181840152602081019050610176565b50505050905090810190601f1680156101be5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b6000801515600160000160009054906101000a900460ff1615151461023e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806115d26022913960400191505060405180910390fd5b6000336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161026f90610539565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050604051809103906000f0801580156102f4573d6000803e3d6000fd5b50905060018060000160006101000a81548160ff0219169083151502179055508260018001908051906020019061032c929190610546565b5080600160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019150600160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106103e557805182526020820191506020810190506020830392506103c2565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390207f0709ed6273534054e52b199c1737de079139d0a52d902ca24fdd94689f1e897984604051808215151515815260200191505060405180910390a350919050565b6060600080600160000160009054906101000a900460ff169050600160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150600180018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561052d5780601f106105025761010080835404028352916020019161052d565b820191906000526020600020905b81548152906001019060200180831161051057829003601f168201915b50505050509250909192565b610fe6806105ec83390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061058757805160ff19168380011785556105b5565b828001600101855582156105b5579182015b828111156105b4578251825591602001919060010190610599565b5b5090506105c291906105c6565b5090565b6105e891905b808211156105e45760008160009055506001016105cc565b5090565b9056fe608060405234801561001057600080fd5b50604051604080610fe68339810180604052604081101561003057600080fd5b81019080805190602001909291908051906020019092919050505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610f09806100dd6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632d904eb8146100465780633d18b91214610148578063b86d2c2114610166575b600080fd5b61004e61020b565b604051808e63ffffffff1663ffffffff1681526020018d63ffffffff1663ffffffff1681526020018c63ffffffff1663ffffffff1681526020018b63ffffffff1663ffffffff1681526020018a63ffffffff1663ffffffff1681526020018963ffffffff1663ffffffff1681526020018863ffffffff1663ffffffff1681526020018763ffffffff1663ffffffff1681526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018281526020019d505050505050505050505050505060405180910390f35b6101506104a8565b6040518082815260200191505060405180910390f35b610209600480360361010081101561017d57600080fd5b81019080803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff16906020019092919050505061062e565b005b60008060008060008060008060008060008060008060016002805490500390506002818154811061023857fe5b906000526020600020906003020160000160009054906101000a900463ffffffff169d506002818154811061026957fe5b906000526020600020906003020160000160049054906101000a900463ffffffff169c506002818154811061029a57fe5b906000526020600020906003020160000160089054906101000a900463ffffffff169b50600281815481106102cb57fe5b9060005260206000209060030201600001600c9054906101000a900463ffffffff169a50600281815481106102fc57fe5b906000526020600020906003020160000160109054906101000a900463ffffffff1699506002818154811061032d57fe5b906000526020600020906003020160000160149054906101000a900463ffffffff1698506002818154811061035e57fe5b906000526020600020906003020160000160189054906101000a900463ffffffff1697506002818154811061038f57fe5b9060005260206000209060030201600001601c9054906101000a900463ffffffff169650600281815481106103c057fe5b906000526020600020906003020160010160009054906101000a900463ffffffff169550600281815481106103f157fe5b906000526020600020906003020160010160049054906101000a900463ffffffff1694506002818154811061042257fe5b906000526020600020906003020160010160089054906101000a900463ffffffff1693506002818154811061045357fe5b9060005260206000209060030201600101600c9054906101000a900463ffffffff1692506002818154811061048457fe5b906000526020600020906003020160020154915050909192939495969798999a9b9c565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461054f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610e4f6028913960400191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f8b2cb4f336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156105ee57600080fd5b505afa158015610602573d6000803e3d6000fd5b505050506040513d602081101561061857600080fd5b8101908080519060200190929190505050905090565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106d3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610e776028913960400191505060405180910390fd5b8763ffffffff168563ffffffff16111580156106fb57508663ffffffff168463ffffffff1611155b801561071357508563ffffffff168363ffffffff1611155b610768576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f815260200180610e9f603f913960400191505060405180910390fd5b610770610d9e565b428161018001818152505060008963ffffffff168760640263ffffffff168161079557fe5b04905060008963ffffffff168760640263ffffffff16816107b257fe5b04905060008963ffffffff168860640263ffffffff16816107cf57fe5b04905082606403830260040284610100019063ffffffff16908163ffffffff168152505081606403820260040284610120019063ffffffff16908163ffffffff168152505080606403810260040284610140019063ffffffff16908163ffffffff1681525050836101400151601e02846101200151602802856101000151601e02010184610160019063ffffffff16908163ffffffff16815250508b846000019063ffffffff16908163ffffffff16815250508a846020019063ffffffff16908163ffffffff168152505089846040019063ffffffff16908163ffffffff168152505088846060019063ffffffff16908163ffffffff168152505087846080019063ffffffff16908163ffffffff1681525050868460a0019063ffffffff16908163ffffffff1681525050858460c0019063ffffffff16908163ffffffff1681525050848460e0019063ffffffff16908163ffffffff16815250506002849080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff16021790555060408201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550606082015181600001600c6101000a81548163ffffffff021916908363ffffffff16021790555060808201518160000160106101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160000160146101000a81548163ffffffff021916908363ffffffff16021790555060c08201518160000160186101000a81548163ffffffff021916908363ffffffff16021790555060e082015181600001601c6101000a81548163ffffffff021916908363ffffffff1602179055506101008201518160010160006101000a81548163ffffffff021916908363ffffffff1602179055506101208201518160010160046101000a81548163ffffffff021916908363ffffffff1602179055506101408201518160010160086101000a81548163ffffffff021916908363ffffffff16021790555061016082015181600101600c6101000a81548163ffffffff021916908363ffffffff160217905550610180820151816002015550505060008a8c8e010163ffffffff16888a8c010160640263ffffffff1681610b6057fe5b0490506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663697fa28133886101600151858a60c001518b60e001516040518663ffffffff1660e01b8152600401808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018563ffffffff1663ffffffff1681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018263ffffffff1663ffffffff16815260200195505050505050602060405180830381600087803b158015610c6357600080fd5b505af1158015610c77573d6000803e3d6000fd5b505050506040513d6020811015610c8d57600080fd5b810190808051906020019092919050505090503373ffffffffffffffffffffffffffffffffffffffff167f1701d242a1b75ed5cdf10512d1a8d92a6174e2b53c5fadbca140dcafc828c3af8761016001518861010001518961012001518a61014001518b60c001518c60e0015188604051808863ffffffff1663ffffffff1681526020018763ffffffff1663ffffffff1681526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff1681526020018263ffffffff1663ffffffff16815260200197505050505050505060405180910390a25050505050505050505050505050565b604051806101a00160405280600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff16815260200160008152509056fe4572726f72202d204f6e6c79206f776e65722063616e20636865636b206974732062616c616e63654572726f72202d204f6e6c79206f776e65722063616e207265706f727420696e64696361746f72734572726f722c20776f6d656e20657865637574697665732063616e6e6f742062652067726561746572207468616e20746f74616c2065786563757469766573a165627a7a72305820e3a8154a17a44e75ae7e517f2b5df7e2b0f4b35a8b755836a5104c5c44df1e9c00294572726f72202d20436f6d70616e7920616c72656164792072656769737465726564a165627a7a72305820d7ed12f57f74dbed2b4774967109b107425bd715a8be9b57fb95f8ae941f204c0029",
  "deployedBytecode": "",
  "sourceMap": "82:1148:5:-;;;274:76;8:9:-1;5:2;;;30:1;27;20:12;5:2;274:76:5;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;274:76:5;;;;;;;;;;;;;;;;334:11;321:10;;:24;;;;;;;;;;;;;;;;;;274:76;82:1148;;;;;;",
  "deployedSourceMap": "82:1148:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;82:1148:5;;;;;;;;;;;;;;;;;;;;;;;;449:569;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;449:569:5;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;449:569:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;449:569:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;449:569:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;449:569:5;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1022:205;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1022:205:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;449:569;533:11;582:5;560:27;;:7;:18;;;;;;;;;;;;:27;;;552:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;738:28;786:10;798;;;;;;;;;;;769:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;769:40:5;738:71;;837:4;816:7;:18;;;:25;;;;;;;;;;;;;;;;;;862:5;847:7;:12;;:20;;;;;;;;;;;;:::i;:::-;;907:15;873:7;:23;;;:50;;;;;;;;;;;;;;;;;;939:4;930:13;;980:7;:23;;;;;;;;;;;;955:57;;973:5;955:57;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;955:57:5;;;;;;;;;;;;;;;;;1005:6;955:57;;;;;;;;;;;;;;;;;;;;;;449:569;;;;:::o;1022:205::-;1064:18;1084:16;1102:15;1138:7;:18;;;;;;;;;;;;1125:31;;1173:7;:23;;;;;;;;;;;;1162:34;;1209:7;:12;;1202:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1022:205;;;:::o;82:1148::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./CompanyState.sol\";\nimport \"./RewardCoin.sol\";\n\ncontract Factory {\n\n  address private rewardCoin;\n\n  struct RegisteredCompany {\n    bool registered;\n    string name;\n    address companyContract;\n  }\n\n  RegisteredCompany private company;\n\n  constructor (address _rewardCoin) public {\n    rewardCoin = _rewardCoin;\n  }\n\n  event CompanyRegistered(string indexed name, address indexed companyContract, bool result);\n\n  function registerCompany(string memory _name)\n                      public returns (bool result) {\n    require(company.registered == false, \"Error - Company already registered\");\n    // proceed to create a new contract for the company and add it to the mapping of registered companies\n    CompanyState companyContract = new CompanyState(msg.sender, rewardCoin);\n\n    company.registered = true;\n    company.name = _name;\n    company.companyContract = address(companyContract);\n\n    result = true;\n\n    emit CompanyRegistered(_name, company.companyContract, result);\n\n  }\n\n  function getCompany() public view returns(string memory name, address cAddress, bool registered){\n\n    registered = company.registered;\n    cAddress = company.companyContract;\n    name = company.name;\n\n  }\n\n}\n",
  "sourcePath": "/home/juan/BC_Challenge/agora/contracts/Factory.sol",
  "ast": {
    "absolutePath": "/home/juan/BC_Challenge/agora/contracts/Factory.sol",
    "exportedSymbols": {
      "Factory": [
        1125
      ]
    },
    "id": 1126,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1012,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/home/juan/BC_Challenge/agora/contracts/CompanyState.sol",
        "file": "./CompanyState.sol",
        "id": 1013,
        "nodeType": "ImportDirective",
        "scope": 1126,
        "sourceUnit": 455,
        "src": "25:28:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/BC_Challenge/agora/contracts/RewardCoin.sol",
        "file": "./RewardCoin.sol",
        "id": 1014,
        "nodeType": "ImportDirective",
        "scope": 1126,
        "sourceUnit": 1483,
        "src": "54:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          454
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1125,
        "linearizedBaseContracts": [
          1125
        ],
        "name": "Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1016,
            "name": "rewardCoin",
            "nodeType": "VariableDeclaration",
            "scope": 1125,
            "src": "104:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1015,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "104:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "Factory.RegisteredCompany",
            "id": 1023,
            "members": [
              {
                "constant": false,
                "id": 1018,
                "name": "registered",
                "nodeType": "VariableDeclaration",
                "scope": 1023,
                "src": "166:15:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1017,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "166:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1020,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 1023,
                "src": "187:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1019,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "187:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1022,
                "name": "companyContract",
                "nodeType": "VariableDeclaration",
                "scope": 1023,
                "src": "204:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1021,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "204:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "RegisteredCompany",
            "nodeType": "StructDefinition",
            "scope": 1125,
            "src": "135:97:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1025,
            "name": "company",
            "nodeType": "VariableDeclaration",
            "scope": 1125,
            "src": "236:33:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
              "typeString": "struct Factory.RegisteredCompany"
            },
            "typeName": {
              "contractScope": null,
              "id": 1024,
              "name": "RegisteredCompany",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1023,
              "src": "236:17:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage_ptr",
                "typeString": "struct Factory.RegisteredCompany"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1034,
              "nodeType": "Block",
              "src": "315:35:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1030,
                      "name": "rewardCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "321:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1031,
                      "name": "_rewardCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1027,
                      "src": "334:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "321:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1033,
                  "nodeType": "ExpressionStatement",
                  "src": "321:24:5"
                }
              ]
            },
            "documentation": null,
            "id": 1035,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1027,
                  "name": "_rewardCoin",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "287:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "286:21:5"
            },
            "returnParameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:0:5"
            },
            "scope": 1125,
            "src": "274:76:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1043,
            "name": "CompanyRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1037,
                  "indexed": true,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1043,
                  "src": "378:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1036,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "378:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1039,
                  "indexed": true,
                  "name": "companyContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 1043,
                  "src": "399:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1041,
                  "indexed": false,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 1043,
                  "src": "432:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "377:67:5"
            },
            "src": "354:91:5"
          },
          {
            "body": {
              "id": 1098,
              "nodeType": "Block",
              "src": "546:472:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1051,
                            "name": "company",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1025,
                            "src": "560:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                              "typeString": "struct Factory.RegisteredCompany storage ref"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "registered",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1018,
                          "src": "560:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "582:5:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "560:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f72202d20436f6d70616e7920616c72656164792072656769737465726564",
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "589:36:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64ebc3b65e3c5cc81247b3c99ba912df11bf984b783ec2b068d27687cce09f05",
                          "typeString": "literal_string \"Error - Company already registered\""
                        },
                        "value": "Error - Company already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64ebc3b65e3c5cc81247b3c99ba912df11bf984b783ec2b068d27687cce09f05",
                          "typeString": "literal_string \"Error - Company already registered\""
                        }
                      ],
                      "id": 1050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1633,
                        1634
                      ],
                      "referencedDeclaration": 1634,
                      "src": "552:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "552:74:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "552:74:5"
                },
                {
                  "assignments": [
                    1059
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1059,
                      "name": "companyContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 1098,
                      "src": "738:28:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CompanyState_$454",
                        "typeString": "contract CompanyState"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1058,
                        "name": "CompanyState",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 454,
                        "src": "738:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CompanyState_$454",
                          "typeString": "contract CompanyState"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1066,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1062,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1630,
                          "src": "786:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "786:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1064,
                        "name": "rewardCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "798:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "769:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_CompanyState_$454_$",
                        "typeString": "function (address,address) returns (contract CompanyState)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1060,
                        "name": "CompanyState",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 454,
                        "src": "773:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CompanyState_$454",
                          "typeString": "contract CompanyState"
                        }
                      }
                    },
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "769:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CompanyState_$454",
                      "typeString": "contract CompanyState"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "738:71:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1067,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "816:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                          "typeString": "struct Factory.RegisteredCompany storage ref"
                        }
                      },
                      "id": 1069,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "registered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1018,
                      "src": "816:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "837:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "816:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1072,
                  "nodeType": "ExpressionStatement",
                  "src": "816:25:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1073,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "847:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                          "typeString": "struct Factory.RegisteredCompany storage ref"
                        }
                      },
                      "id": 1075,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1020,
                      "src": "847:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1076,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "862:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "847:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1078,
                  "nodeType": "ExpressionStatement",
                  "src": "847:20:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1079,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "873:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                          "typeString": "struct Factory.RegisteredCompany storage ref"
                        }
                      },
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "companyContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1022,
                      "src": "873:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1083,
                          "name": "companyContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1059,
                          "src": "907:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CompanyState_$454",
                            "typeString": "contract CompanyState"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CompanyState_$454",
                            "typeString": "contract CompanyState"
                          }
                        ],
                        "id": 1082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "899:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "899:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "873:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "873:50:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1087,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "930:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "939:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "930:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1090,
                  "nodeType": "ExpressionStatement",
                  "src": "930:13:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1092,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1045,
                        "src": "973:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1093,
                          "name": "company",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1025,
                          "src": "980:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                            "typeString": "struct Factory.RegisteredCompany storage ref"
                          }
                        },
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "companyContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1022,
                        "src": "980:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1095,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1048,
                        "src": "1005:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1091,
                      "name": "CompanyRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1043,
                      "src": "955:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (string memory,address,bool)"
                      }
                    },
                    "id": 1096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "955:57:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1097,
                  "nodeType": "EmitStatement",
                  "src": "950:62:5"
                }
              ]
            },
            "documentation": null,
            "id": 1099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1045,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1099,
                  "src": "474:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "473:21:5"
            },
            "returnParameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1048,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 1099,
                  "src": "533:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "532:13:5"
            },
            "scope": 1125,
            "src": "449:569:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "1118:109:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1108,
                      "name": "registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1106,
                      "src": "1125:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1109,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "1138:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                          "typeString": "struct Factory.RegisteredCompany storage ref"
                        }
                      },
                      "id": 1110,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1018,
                      "src": "1138:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1125:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "1125:31:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1113,
                      "name": "cAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1104,
                      "src": "1162:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1114,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "1173:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                          "typeString": "struct Factory.RegisteredCompany storage ref"
                        }
                      },
                      "id": 1115,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "companyContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1022,
                      "src": "1173:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1162:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1118,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "1202:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1119,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "1209:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                          "typeString": "struct Factory.RegisteredCompany storage ref"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1020,
                      "src": "1209:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1202:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:19:5"
                }
              ]
            },
            "documentation": null,
            "id": 1124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:2:5"
            },
            "returnParameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1102,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "1064:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1064:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1104,
                  "name": "cAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "1084:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1106,
                  "name": "registered",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "1102:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1105,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1063:55:5"
            },
            "scope": 1125,
            "src": "1022:205:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1126,
        "src": "82:1148:5"
      }
    ],
    "src": "0:1231:5"
  },
  "legacyAST": {
    "absolutePath": "/home/juan/BC_Challenge/agora/contracts/Factory.sol",
    "exportedSymbols": {
      "Factory": [
        1125
      ]
    },
    "id": 1126,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1012,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/home/juan/BC_Challenge/agora/contracts/CompanyState.sol",
        "file": "./CompanyState.sol",
        "id": 1013,
        "nodeType": "ImportDirective",
        "scope": 1126,
        "sourceUnit": 455,
        "src": "25:28:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/juan/BC_Challenge/agora/contracts/RewardCoin.sol",
        "file": "./RewardCoin.sol",
        "id": 1014,
        "nodeType": "ImportDirective",
        "scope": 1126,
        "sourceUnit": 1483,
        "src": "54:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          454
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1125,
        "linearizedBaseContracts": [
          1125
        ],
        "name": "Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1016,
            "name": "rewardCoin",
            "nodeType": "VariableDeclaration",
            "scope": 1125,
            "src": "104:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1015,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "104:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "Factory.RegisteredCompany",
            "id": 1023,
            "members": [
              {
                "constant": false,
                "id": 1018,
                "name": "registered",
                "nodeType": "VariableDeclaration",
                "scope": 1023,
                "src": "166:15:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1017,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "166:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1020,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 1023,
                "src": "187:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1019,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "187:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1022,
                "name": "companyContract",
                "nodeType": "VariableDeclaration",
                "scope": 1023,
                "src": "204:23:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1021,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "204:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "RegisteredCompany",
            "nodeType": "StructDefinition",
            "scope": 1125,
            "src": "135:97:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1025,
            "name": "company",
            "nodeType": "VariableDeclaration",
            "scope": 1125,
            "src": "236:33:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
              "typeString": "struct Factory.RegisteredCompany"
            },
            "typeName": {
              "contractScope": null,
              "id": 1024,
              "name": "RegisteredCompany",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1023,
              "src": "236:17:5",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage_ptr",
                "typeString": "struct Factory.RegisteredCompany"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1034,
              "nodeType": "Block",
              "src": "315:35:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1030,
                      "name": "rewardCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "321:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1031,
                      "name": "_rewardCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1027,
                      "src": "334:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "321:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1033,
                  "nodeType": "ExpressionStatement",
                  "src": "321:24:5"
                }
              ]
            },
            "documentation": null,
            "id": 1035,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1027,
                  "name": "_rewardCoin",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "287:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "286:21:5"
            },
            "returnParameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:0:5"
            },
            "scope": 1125,
            "src": "274:76:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1043,
            "name": "CompanyRegistered",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1037,
                  "indexed": true,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1043,
                  "src": "378:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1036,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "378:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1039,
                  "indexed": true,
                  "name": "companyContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 1043,
                  "src": "399:31:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1041,
                  "indexed": false,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 1043,
                  "src": "432:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "377:67:5"
            },
            "src": "354:91:5"
          },
          {
            "body": {
              "id": 1098,
              "nodeType": "Block",
              "src": "546:472:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1051,
                            "name": "company",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1025,
                            "src": "560:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                              "typeString": "struct Factory.RegisteredCompany storage ref"
                            }
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "registered",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1018,
                          "src": "560:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "582:5:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "560:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f72202d20436f6d70616e7920616c72656164792072656769737465726564",
                        "id": 1055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "589:36:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64ebc3b65e3c5cc81247b3c99ba912df11bf984b783ec2b068d27687cce09f05",
                          "typeString": "literal_string \"Error - Company already registered\""
                        },
                        "value": "Error - Company already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64ebc3b65e3c5cc81247b3c99ba912df11bf984b783ec2b068d27687cce09f05",
                          "typeString": "literal_string \"Error - Company already registered\""
                        }
                      ],
                      "id": 1050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1633,
                        1634
                      ],
                      "referencedDeclaration": 1634,
                      "src": "552:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "552:74:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "552:74:5"
                },
                {
                  "assignments": [
                    1059
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1059,
                      "name": "companyContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 1098,
                      "src": "738:28:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CompanyState_$454",
                        "typeString": "contract CompanyState"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1058,
                        "name": "CompanyState",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 454,
                        "src": "738:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CompanyState_$454",
                          "typeString": "contract CompanyState"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1066,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1062,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1630,
                          "src": "786:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "786:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1064,
                        "name": "rewardCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "798:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "769:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_CompanyState_$454_$",
                        "typeString": "function (address,address) returns (contract CompanyState)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1060,
                        "name": "CompanyState",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 454,
                        "src": "773:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CompanyState_$454",
                          "typeString": "contract CompanyState"
                        }
                      }
                    },
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "769:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CompanyState_$454",
                      "typeString": "contract CompanyState"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "738:71:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1067,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "816:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                          "typeString": "struct Factory.RegisteredCompany storage ref"
                        }
                      },
                      "id": 1069,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "registered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1018,
                      "src": "816:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "837:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "816:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1072,
                  "nodeType": "ExpressionStatement",
                  "src": "816:25:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1073,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "847:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                          "typeString": "struct Factory.RegisteredCompany storage ref"
                        }
                      },
                      "id": 1075,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1020,
                      "src": "847:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1076,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1045,
                      "src": "862:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "847:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1078,
                  "nodeType": "ExpressionStatement",
                  "src": "847:20:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1079,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "873:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                          "typeString": "struct Factory.RegisteredCompany storage ref"
                        }
                      },
                      "id": 1081,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "companyContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1022,
                      "src": "873:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1083,
                          "name": "companyContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1059,
                          "src": "907:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CompanyState_$454",
                            "typeString": "contract CompanyState"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CompanyState_$454",
                            "typeString": "contract CompanyState"
                          }
                        ],
                        "id": 1082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "899:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 1084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "899:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "873:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "873:50:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1087,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "930:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "939:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "930:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1090,
                  "nodeType": "ExpressionStatement",
                  "src": "930:13:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1092,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1045,
                        "src": "973:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1093,
                          "name": "company",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1025,
                          "src": "980:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                            "typeString": "struct Factory.RegisteredCompany storage ref"
                          }
                        },
                        "id": 1094,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "companyContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1022,
                        "src": "980:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1095,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1048,
                        "src": "1005:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1091,
                      "name": "CompanyRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1043,
                      "src": "955:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (string memory,address,bool)"
                      }
                    },
                    "id": 1096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "955:57:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1097,
                  "nodeType": "EmitStatement",
                  "src": "950:62:5"
                }
              ]
            },
            "documentation": null,
            "id": 1099,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1045,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1099,
                  "src": "474:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1044,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "473:21:5"
            },
            "returnParameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1048,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 1099,
                  "src": "533:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "532:13:5"
            },
            "scope": 1125,
            "src": "449:569:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "1118:109:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1108,
                      "name": "registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1106,
                      "src": "1125:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1109,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "1138:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                          "typeString": "struct Factory.RegisteredCompany storage ref"
                        }
                      },
                      "id": 1110,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1018,
                      "src": "1138:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1125:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1112,
                  "nodeType": "ExpressionStatement",
                  "src": "1125:31:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1113,
                      "name": "cAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1104,
                      "src": "1162:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1114,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "1173:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                          "typeString": "struct Factory.RegisteredCompany storage ref"
                        }
                      },
                      "id": 1115,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "companyContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1022,
                      "src": "1173:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1162:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "1162:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1118,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "1202:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1119,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1025,
                        "src": "1209:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegisteredCompany_$1023_storage",
                          "typeString": "struct Factory.RegisteredCompany storage ref"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1020,
                      "src": "1209:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "1202:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "1202:19:5"
                }
              ]
            },
            "documentation": null,
            "id": 1124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:2:5"
            },
            "returnParameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1102,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "1064:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1064:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1104,
                  "name": "cAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "1084:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1084:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1106,
                  "name": "registered",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "1102:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1105,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1063:55:5"
            },
            "scope": 1125,
            "src": "1022:205:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1126,
        "src": "82:1148:5"
      }
    ],
    "src": "0:1231:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x0709ed6273534054e52b199c1737de079139d0a52d902ca24fdd94689f1e8979": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "name",
              "type": "string"
            },
            {
              "indexed": true,
              "name": "companyContract",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "result",
              "type": "bool"
            }
          ],
          "name": "CompanyRegistered",
          "type": "event",
          "signature": "0x0709ed6273534054e52b199c1737de079139d0a52d902ca24fdd94689f1e8979"
        }
      },
      "links": {},
      "address": "0xdB8C6215eD482Ff98a556D4f6A30DfAa625F0A88",
      "transactionHash": "0x94028e613c2d3b427a21303505a7ef9247ba40c2c8813047f82e8dc2aee39f06"
    }
  },
  "schemaVersion": "3.0.17",
  "updatedAt": "2019-11-02T19:25:24.367Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}